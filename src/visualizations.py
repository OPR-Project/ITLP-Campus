from typing import Dict, Literal, Tuple
import numpy as np


STUFF_CLASSES = {
    "mapillary": (
        "Bird",
        "Ground Animal",
        "Curb",
        "Fence",
        "Guard Rail",
        "Barrier",
        "Wall",
        "Bike Lane",
        "Crosswalk - Plain",
        "Curb Cut",
        "Parking",
        "Pedestrian Area",
        "Rail Track",
        "Road",
        "Service Lane",
        "Sidewalk",
        "Bridge",
        "Building",
        "Tunnel",
        "Person",
        "Bicyclist",
        "Motorcyclist",
        "Other Rider",
        "Lane Marking - Crosswalk",
        "Lane Marking - General",
        "Mountain",
        "Sand",
        "Sky",
        "Snow",
        "Terrain",
        "Vegetation",
        "Water",
        "Banner",
        "Bench",
        "Bike Rack",
        "Billboard",
        "Catch Basin",
        "CCTV Camera",
        "Fire Hydrant",
        "Junction Box",
        "Mailbox",
        "Manhole",
        "Phone Booth",
        "Pothole",
        "Street Light",
        "Pole",
        "Traffic Sign Frame",
        "Utility Pole",
        "Traffic Light",
        "Traffic Sign (Back)",
        "Traffic Sign (Front)",
        "Trash Can",
        "Bicycle",
        "Boat",
        "Bus",
        "Car",
        "Caravan",
        "Motorcycle",
        "On Rails",
        "Other Vehicle",
        "Trailer",
        "Truck",
        "Wheeled Slow",
        "Car Mount",
        "Ego Vehicle",
    ),
    "ade20k": (
        "wall",
        "building",
        "sky",
        "floor",
        "tree",
        "ceiling",
        "road",
        "bed",
        "windowpane",
        "grass",
        "cabinet",
        "sidewalk",
        "person",
        "earth",
        "door",
        "table",
        "mountain",
        "plant",
        "curtain",
        "chair",
        "car",
        "water",
        "painting",
        "sofa",
        "shelf",
        "house",
        "sea",
        "mirror",
        "rug",
        "field",
        "armchair",
        "seat",
        "fence",
        "desk",
        "rock",
        "wardrobe",
        "lamp",
        "bathtub",
        "railing",
        "cushion",
        "base",
        "box",
        "column",
        "signboard",
        "chest",
        "counter",
        "sand",
        "sink",
        "skyscraper",
        "fireplace",
        "refrigerator",
        "grandstand",
        "path",
        "stairs",
        "runway",
        "case",
        "pool",
        "pillow",
        "screen",
        "stairway",
        "river",
        "bridge",
        "bookcase",
        "blind",
        "coffee",
        "toilet",
        "flower",
        "book",
        "hill",
        "bench",
        "countertop",
        "stove",
        "palm",
        "kitchen",
        "computer",
        "swivel",
        "boat",
        "bar",
        "arcade",
        "hovel",
        "bus",
        "towel",
        "light",
        "truck",
        "tower",
        "chandelier",
        "awning",
        "streetlight",
        "booth",
        "television",
        "airplane",
        "dirt",
        "apparel",
        "pole",
        "land",
        "bannister",
        "escalator",
        "ottoman",
        "bottle",
        "buffet",
        "poster",
        "stage",
        "van",
        "ship",
        "fountain",
        "conveyer",
        "canopy",
        "washer",
        "plaything",
        "swimming",
        "stool",
        "barrel",
        "basket",
        "waterfall",
        "tent",
        "bag",
        "minibike",
        "cradle",
        "oven",
        "ball",
        "food",
        "step",
        "tank",
        "trade",
        "microwave",
        "pot",
        "animal",
        "bicycle",
        "lake",
        "dishwasher",
        "screen",
        "blanket",
        "sculpture",
        "hood",
        "sconce",
        "vase",
        "traffic",
        "tray",
        "ashcan",
        "fan",
        "pier",
        "crt",
        "plate",
        "monitor",
        "bulletin",
        "shower",
        "radiator",
        "glass",
        "clock",
        "flag",
    ),
}
STUFF_COLORS = {
    "mapillary": (
        (165, 42, 42),
        (0, 192, 0),
        (196, 196, 196),
        (190, 153, 153),
        (180, 165, 180),
        (90, 120, 150),
        (102, 102, 156),
        (128, 64, 255),
        (140, 140, 200),
        (170, 170, 170),
        (250, 170, 160),
        (96, 96, 96),
        (230, 150, 140),
        (128, 64, 128),
        (110, 110, 110),
        (244, 35, 232),
        (150, 100, 100),
        (70, 70, 70),
        (150, 120, 90),
        (220, 20, 60),
        (255, 0, 0),
        (255, 0, 100),
        (255, 0, 200),
        (200, 128, 128),
        (255, 255, 255),
        (64, 170, 64),
        (230, 160, 50),
        (70, 130, 180),
        (190, 255, 255),
        (152, 251, 152),
        (107, 142, 35),
        (0, 170, 30),
        (255, 255, 128),
        (250, 0, 30),
        (100, 140, 180),
        (220, 220, 220),
        (220, 128, 128),
        (222, 40, 40),
        (100, 170, 30),
        (40, 40, 40),
        (33, 33, 33),
        (100, 128, 160),
        (142, 0, 0),
        (70, 100, 150),
        (210, 170, 100),
        (153, 153, 153),
        (128, 128, 128),
        (0, 0, 80),
        (250, 170, 30),
        (192, 192, 192),
        (220, 220, 0),
        (140, 140, 20),
        (119, 11, 32),
        (150, 0, 255),
        (0, 60, 100),
        (0, 0, 142),
        (0, 0, 90),
        (0, 0, 230),
        (0, 80, 100),
        (128, 64, 64),
        (0, 0, 110),
        (0, 0, 70),
        (0, 0, 192),
        (32, 32, 32),
        (120, 10, 10),
    ),
    "ade20k": (
        (120, 120, 120),
        (180, 120, 120),
        (6, 230, 230),
        (80, 50, 50),
        (4, 200, 3),
        (120, 120, 80),
        (140, 140, 140),
        (204, 5, 255),
        (230, 230, 230),
        (4, 250, 7),
        (224, 5, 255),
        (235, 255, 7),
        (150, 5, 61),
        (120, 120, 70),
        (8, 255, 51),
        (255, 6, 82),
        (143, 255, 140),
        (204, 255, 4),
        (255, 51, 7),
        (204, 70, 3),
        (0, 102, 200),
        (61, 230, 250),
        (255, 6, 51),
        (11, 102, 255),
        (255, 7, 71),
        (255, 9, 224),
        (9, 7, 230),
        (220, 220, 220),
        (255, 9, 92),
        (112, 9, 255),
        (8, 255, 214),
        (7, 255, 224),
        (255, 184, 6),
        (10, 255, 71),
        (255, 41, 10),
        (7, 255, 255),
        (224, 255, 8),
        (102, 8, 255),
        (255, 61, 6),
        (255, 194, 7),
        (255, 122, 8),
        (0, 255, 20),
        (255, 8, 41),
        (255, 5, 153),
        (6, 51, 255),
        (235, 12, 255),
        (160, 150, 20),
        (0, 163, 255),
        (140, 140, 140),
        (250, 10, 15),
        (20, 255, 0),
        (31, 255, 0),
        (255, 31, 0),
        (255, 224, 0),
        (153, 255, 0),
        (0, 0, 255),
        (255, 71, 0),
        (0, 235, 255),
        (0, 173, 255),
        (31, 0, 255),
        (11, 200, 200),
        (255, 82, 0),
        (0, 255, 245),
        (0, 61, 255),
        (0, 255, 112),
        (0, 255, 133),
        (255, 0, 0),
        (255, 163, 0),
        (255, 102, 0),
        (194, 255, 0),
        (0, 143, 255),
        (51, 255, 0),
        (0, 82, 255),
        (0, 255, 41),
        (0, 255, 173),
        (10, 0, 255),
        (173, 255, 0),
        (0, 255, 153),
        (255, 92, 0),
        (255, 0, 255),
        (255, 0, 245),
        (255, 0, 102),
        (255, 173, 0),
        (255, 0, 20),
        (255, 184, 184),
        (0, 31, 255),
        (0, 255, 61),
        (0, 71, 255),
        (255, 0, 204),
        (0, 255, 194),
        (0, 255, 82),
        (0, 10, 255),
        (0, 112, 255),
        (51, 0, 255),
        (0, 194, 255),
        (0, 122, 255),
        (0, 255, 163),
        (255, 153, 0),
        (0, 255, 10),
        (255, 112, 0),
        (143, 255, 0),
        (82, 0, 255),
        (163, 255, 0),
        (255, 235, 0),
        (8, 184, 170),
        (133, 0, 255),
        (0, 255, 92),
        (184, 0, 255),
        (255, 0, 31),
        (0, 184, 255),
        (0, 214, 255),
        (255, 0, 112),
        (92, 255, 0),
        (0, 224, 255),
        (112, 224, 255),
        (70, 184, 160),
        (163, 0, 255),
        (153, 0, 255),
        (71, 255, 0),
        (255, 0, 163),
        (255, 204, 0),
        (255, 0, 143),
        (0, 255, 235),
        (133, 255, 0),
        (255, 0, 235),
        (245, 0, 255),
        (255, 0, 122),
        (255, 245, 0),
        (10, 190, 212),
        (214, 255, 0),
        (0, 204, 255),
        (20, 0, 255),
        (255, 255, 0),
        (0, 153, 255),
        (0, 41, 255),
        (0, 255, 204),
        (41, 0, 255),
        (41, 255, 0),
        (173, 0, 255),
        (0, 245, 255),
        (71, 0, 255),
        (122, 0, 255),
        (0, 255, 184),
        (0, 92, 255),
        (184, 255, 0),
        (0, 133, 255),
        (255, 214, 0),
        (25, 194, 194),
        (102, 255, 0),
        (92, 0, 255),
    ),
}


def colorize_binary_mask(binary_mask: np.ndarray, color: Tuple[int, int, int]) -> np.ndarray:
    binary_mask = binary_mask.astype("uint8")
    rgb = np.zeros(binary_mask.shape + (3,), dtype=np.uint8)
    rgb[:, :, :] = color
    rgb = rgb * binary_mask[:, :, np.newaxis]
    return rgb


def get_colored_mask(mask: np.ndarray, dataset: Literal["mapillary", "ade20k"] = "mapillary") -> np.ndarray:
    labels, areas = np.unique(mask, return_counts=True)
    sorted_idxs = np.argsort(-areas).tolist()
    labels = labels[sorted_idxs]
    rgb_mask = np.zeros(mask.shape + (3,), dtype=np.uint8)
    for label in filter(lambda l: l < len(STUFF_CLASSES[dataset]), labels):
        mask_color = STUFF_COLORS[dataset][label]
        binary_mask = (mask == label).astype(np.uint8)
        rgb_mask += colorize_binary_mask(
            binary_mask,
            color=mask_color,
        )
    return rgb_mask
